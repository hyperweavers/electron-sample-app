name: CI

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - '**'

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        node_version: [ 12.x ]

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}

      - name: Determine npm cache location
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache dependencies
        uses: actions/cache@v2
        env:
          cache-name: dependencies-cache
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install dependencies
        run: npm ci

      - name: Lint source code
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        node_version: [ 12.x ]

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}

      - name: Linux specific setup
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends rpm

      - name: Determine npm cache location
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache dependencies
        uses: actions/cache@v2
        env:
          cache-name: dependencies-cache
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run make

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release

      # - name: Upload artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: ${{ matrix.node_version }}-OS-${{ matrix.os }}
      #     path: out/make
